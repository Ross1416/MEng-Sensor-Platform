{"ast":null,"code":"var _jsxFileName = \"/Users/apps4good/Documents/MEng Project/MEng-Sensor-Platform/user-interface/src/App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState, useEffect } from 'react';\nimport { Map } from './components/Map.js';\nimport { Panorama } from './components/Panorama.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [panorama, setPanorama] = useState(require('./components/images/img2.jpg'));\n  // const [panorama, setPanorama] = useState(null);\n  //   fetch(\"/api/route\")\n  //   .then(res => res.json())\n  //   .then(data => {setAccuracy(data.accuracy)})\n  // })\n\n  // TO DO: Implelement this\n  // useEffect(() => {\n  //   // Define query parameters\n  //   const params = new URLSearchParams({\n  //     param1: 'value1',\n  //     param2: 'value2',\n  //   });\n\n  //   fetch(`/api/route?${params.toString()}`)\n  //     .then(res => res.json())\n  //     .then(data => setAccuracy(data.accuracy))\n  //     .catch(err => console.error(\"Error fetching data:\", err));\n  // }, []);  // Add dependencies if needed\n\n  const [locationName, setLocationName] = useState('unnamed location');\n  const searchNewPins = async () => {\n    try {\n      const response = await fetch('SensorPlatformAnalysis.json');\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setLocationName(data.location_name);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  useEffect(() => {\n    searchNewPins();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          children: '<'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: '>'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          placeholder: \"Search...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: '↵'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Hyperbot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: /*#__PURE__*/_jsxDEV(Map, {\n          setPanorama: setPanorama\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"panoramic-container\",\n        children: /*#__PURE__*/_jsxDEV(Panorama, {\n          panorama: panorama,\n          locationName: locationName,\n          setLocationName: setLocationName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"TTea4CGdXKGYZZIE1S0c0U1HJZ8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Map","Panorama","jsxDEV","_jsxDEV","App","_s","panorama","setPanorama","require","locationName","setLocationName","searchNewPins","response","fetch","ok","Error","status","data","json","location_name","err","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","_c","$RefreshReg$"],"sources":["/Users/apps4good/Documents/MEng Project/MEng-Sensor-Platform/user-interface/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport { Map } from './components/Map.js';\nimport { Panorama } from './components/Panorama.js';\n\nfunction App() {\n  \n  const [panorama, setPanorama] = useState(require('./components/images/img2.jpg'));\n  // const [panorama, setPanorama] = useState(null);\n  //   fetch(\"/api/route\")\n  //   .then(res => res.json())\n  //   .then(data => {setAccuracy(data.accuracy)})\n  // })\n\n  // TO DO: Implelement this\n  // useEffect(() => {\n  //   // Define query parameters\n  //   const params = new URLSearchParams({\n  //     param1: 'value1',\n  //     param2: 'value2',\n  //   });\n\n  //   fetch(`/api/route?${params.toString()}`)\n  //     .then(res => res.json())\n  //     .then(data => setAccuracy(data.accuracy))\n  //     .catch(err => console.error(\"Error fetching data:\", err));\n  // }, []);  // Add dependencies if needed\n\n  const [locationName, setLocationName] = useState('unnamed location')\n  const searchNewPins = async () => {\n\n      try {\n\n        const response = await fetch('SensorPlatformAnalysis.json');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        setLocationName(data.location_name)\n      } catch (err) {\n        console.log(err)\n      }\n  }\n\n  useEffect(()=> {\n    searchNewPins();\n  }, [])\n\n  return (\n  \n    <div className='container'>\n      {/* <button onClick={searchNewPins}>Press me biatch</button> */}\n      <div className='header'>\n        <div className='search'>\n          <button>{'<'}</button>\n          <button>{'>'}</button>\n          <input placeholder='Search...'/> \n          <button>{'↵'}</button>\n        </div>\n        <h1>Hyperbot</h1>\n        \n      </div>\n      <div className='body'>\n        <div className='map-container'>\n          <Map setPanorama={setPanorama}/>\n        </div>\n\n        <div className='panoramic-container'>\n          <Panorama panorama={panorama} locationName={locationName} setLocationName={setLocationName}/>\n        </div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}